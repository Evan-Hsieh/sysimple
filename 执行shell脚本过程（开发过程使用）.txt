执行shell脚本教程（支持windows和linux，在使用过程中如果遇到错误，请及时反馈）:

package org.bit.linc.web.commons;

import org.bit.linc.exception.SysimpleException;
import org.bit.linc.shell.CmdCallBack;
import org.bit.linc.shell.CmdLine;
import org.bit.linc.shell.CmdType;

//继承CmdCallBack接口（可以在使用的地方使用内部类来继承）
public class CmdTest implements CmdCallBack{	
private  CmdLine cmdline;//需要有一个CmdLine成员变量
	public CmdTest(){
		cmdline=new CmdLine();
	}
	//CmdCallBack接口中定义的，在该方法中处理得到的实时反馈数据
	public void printLine(String content) { 
		// TODO Auto-generated method stub
		System.out.println(content);
	}
	
	public void getCall(final String commond,final String interPath){
		//需要使用线程驱动，否则遇到长时间运行的脚本主线程会卡死
		new Thread(new Runnable() {
            public void run() {
            	try {
					cmdline.callCommand(CmdType.DOS,commond,interPath, CmdTest.this);
				} catch (SysimpleException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					System.out.println(e.getMessage());
				}
            }  
        }).start();
	}
	
	public static void main(String args[]){
		CmdTest cmdTest=new CmdTest();
		//在执行脚本文件之前最好检查文件是否存在，d:/ROOT.bat是脚本文件，//d:/hello.txt是中间输出重定向的文件，不需要检查，事先可以不存在。
		//执行完毕后，该文件不会删除，如果需要删除，自己删除
		cmdTest.getCall("d:/ROOT.bat","d:/hello.txt");
	}
}
